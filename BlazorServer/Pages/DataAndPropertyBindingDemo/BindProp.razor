@page "/dataandpropertybindingdemo/bindprop"

@inject NavigationManager _navigationManager
<h2 class="text-success">Individual Product</h2>
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3><hr />
        <h4>One way data binding</h4>
        <div>
            Active: <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive ? "checked" : null)" /><br />
        </div>
        <div>
            Price-Input: <input type="number" value="@Product.Price" /><br />
        </div>
        <div>
            Product Properties:
            <select @bind="selectedProp">
                @foreach (var prop in Product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>
        <br />
        <br />
        <h4>Two way data binding - On event change ("default")</h4>
        Price-Input: <input type="number" @bind-value="Product.Price" /><br />
        <br />
        <h4>Two way data binding - bind by declared event (oninput)</h4>
        Price-Input: <input type="number" @bind-value="Product.Price" @bind-value:event="oninput" /><br />

        <br />
        <a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/components/event-handling?view=aspnetcore-6.0" target="_blank">Microsoft Documentation - Event Handling </a>
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3><hr />
        Name: @Product.Name <br />
        IsActive: @Product.IsActive <br />
        Price: @Product.Price <br />

        @*example of C# ternary operation*@
        This Product is: @(Product.IsActive ? "Active" : "InActive") <br />
        Property Selected: @selectedProp <br />

        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value: @(Product.ProductProperties.FirstOrDefault(u=>u.Key==selectedProp)!.Value)</p>
        }
    </div>
    <br/>
    <div class="col-12 pt-4">
        <h2 class="text-success">Product Table</h2>
        <table class="table table-striped">
            <tbody>
            @foreach (var prod in Products)
            {
                <tr>
                    <td><input type="text" @bind-value="prod.Name" @bind-value:event="oninput"/></td>
                    <td><input type="text" @bind-value="prod.Price" @bind-value:event="oninput"/></td>
                    <td><input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive ? "checked" : null)" /></td>
                </tr>
            }
            </tbody>

        </table>
        <br/><br/>
        <h2>Product Summary</h2>
        @foreach (var prod in Products)
        {
            <p>@prod.Name [@prod.Price] is @(prod.IsActive ? "Active" : "InActive")</p>
        }
        <br/>
    </div>
</div>

@code {

    private string selectedProp = "";

    public Product Product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<ProductProp>()
            {
                new() {Id = 1, Key = "Color", Value="Black"},
                new() {Id = 2, Key = "Flavor", Value="Rose Jasmine"},
                new() {Id = 3, Key = "Size", Value="20oz"}
            }
        };

    List<Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 9.99,
            ProductProperties = new List<ProductProp>()
            {
                new() { Id = 1, Key = "Flavor", Value = "Rose"},
                new() { Id = 2, Key = "Size", Value = "20oz"},
                new() { Id = 3, Key = "Color", Value="Purple" }
            }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 12.99,
            ProductProperties = new List<ProductProp>()
            {
                new() { Id = 1, Key = "Flavor", Value = "Lily" },
                new() { Id = 2, Key = "Size", Value = "18oz" },
                new() {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }

}
